@using BetterBudgetWeb.Data;

<div class="chart-back-hor">
    <div style="display:inline-block">
        <span class="chart-bar-hor__label" style="width:100%;text-align:start;margin-bottom:2vh">
            <strong>
                Dynamic Monthly Costs
            </strong>
        </span>

        <span style="color:@Constants.ColorScheme["Text"];">
            <strong>
                <span class="text-color">Left/Budgeted: </span>
                <span style="color:@BudgetColor">@(Constants.Pretty(Left) + "/" + Constants.Pretty(Amount).Trim('$'))</span>
            </strong>
        </span>
    </div>
    @if (!Mobile)
    {
        <div class="chart-hor flex-c">
            @foreach (var dp in DPs)
            {
                @if (DPs != null && DPs.Count > 0 && dp.Name == DPs[DPs.Count - 1].Name)
                {
                    <ChartBarHorizontal Value=@(dp.Left)
                                        Label=@dp.Name
                                        Negative=@(dp.Left < 0)
                                        MaxValue=@dp.Amount
                                        BottomBorder=false
                                        DateBarClicked=BarClicked />
                }
                else
                {
                    <ChartBarHorizontal Value=@(dp.Left)
                                        Label=@dp.Name
                                        Negative=@(dp.Left < 0)
                                        MaxValue=@dp.Amount
                                        BottomBorder=true
                                        DateBarClicked=BarClicked />
                }

            }
        </div>
    }
    else
    {
        <div class="chart-hor flex-r" style="justify-content:flex-start;overflow-x: auto;">
            @foreach (var dp in DPs)
            {
                @if (DPs != null && DPs.Count > 0 && dp.Name == DPs[DPs.Count - 1].Name)
                {
                    <ChartBarHorizontal Value=@(dp.Left)
                                        Label=@dp.Name
                                        Negative=@(dp.Left < 0)
                                        MaxValue=@dp.Amount
                                        BottomBorder=false
                                        DateBarClicked=BarClicked />
                }
                else
                {
                    <ChartBarHorizontal Value=@(dp.Left)
                                        Label=@dp.Name
                                        Negative=@(dp.Left < 0)
                                        MaxValue=@dp.Amount
                                        BottomBorder=true
                                        DateBarClicked=BarClicked />
                }
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public List<DynamicCostItem> DPs { get; set; } = new List<DynamicCostItem>();

    [Parameter]
    public EventCallback<string> BarClicked { get; set; }

    [Parameter]
    public bool Horizontal { get; set; }

    private double Left => DPs.Sum(d => d.Left);
    private double Amount => DPs.Sum(d => d.Amount);
    private string BudgetColor => Left > 0 ? Constants.ColorScheme["IncomeGood"] : "red";

    public bool Mobile => Constants.Mobile;
}
