@using BetterBudgetWeb.Data
@using BetterBudgetWeb.Runner
@inject NavigationManager NavMan
@inject IJSRuntime JSRuntime

<div id="main-bar" class="navbar-dark" style="position:sticky;top:0;padding:0;background-color:indigo;width:100%;z-index:10">
    <div class="flex-r" style="width:100%;padding:1em;justify-content:space-between;align-items:center">
        <img src="images/RoundLogo.webp" alt="Logo image" style="width:10vh;height:10vh;padding:2px;cursor:pointer" @onclick=@(() => NavMan.NavigateTo("")) />
        @if (!LoadingDemo)
        {
            <button style="background-color:transparent;padding:1em;font-family:'CBB Default';"
                    class="btn-grad"
                    @onclick=LoadDemo>
                View Demo
            </button>
            <span class="oi oi-menu" style="font-size:large" @onclick="ToggleNavMenu"></span>
        }
        else
        {
            <div class="slide-right" style="width:100%">
                <div style="font-size:large;color:white;font-family:'CBB Default'">Loading Demo...</div>
            </div>
        }
    </div>

    <div class="@NavMenuCssClass" @onclick="ToggleNavMenu" style="width:100%;height:fit-content;overflow:auto">
        <nav class="flex-column" style="justify-content:start">
            <div class="nav-item px-1">
                <NavLink href="" class="nav-link" Match="NavLinkMatch.All" style="font-size:large">
                    <span style="font-family:'CBB Default';color:white">Home</span>
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink href="features" class="nav-link" Match="NavLinkMatch.All" style="font-size:large">
                    <span style="font-family:'CBB Default';color:white">Features</span>
                </NavLink>
            </div>
            <div class="nav-item px-1">
                <NavLink href="FAQs" class="nav-link" Match="NavLinkMatch.All" style="font-size:large">
                    <span style="font-family:'CBB Default';color:white">FAQs</span>
                </NavLink>
            </div>
            <div class="flex-r" style="align-items:center;margin:1em 0 1em 0">
                <a @onclick=@(() => ToggleSign(false)) href="sign/in" style="font-family:'CBB Default';margin-right:1em;font-size:large;color:white">Log in</a>
                <button class="btn btn-primary" @onclick=@(() => ToggleSign(true)) style="font-size:large;font-family:'CBB Default';color:black;background-color:cyan">@Constants.SignUpText</button>
            </div>
        </nav>
    </div>
</div>

@code {
    [CascadingParameter]
    public EventCallback GrabDemo { get; set; }
    
    [CascadingParameter]
    public bool SignIsUp { get; set; }

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private bool LoadingDemo { get; set; }

    private async void LoadDemo()
    {
        LoadingDemo = true;
        await GrabDemo.InvokeAsync();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void ToggleSign(bool signIsUp)
    {
        SignIsUp = signIsUp;

        if (signIsUp)
            NavMan.NavigateTo("sign/up");
        else
            NavMan.NavigateTo("sign/in");
    }
}
