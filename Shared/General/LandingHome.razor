@page "/"

<PageTitle>Landing Page</PageTitle>

@using BetterBudgetWeb.Data
@using BetterBudgetWeb.MainMenuItems.Chart
@using BetterBudgetWeb.Runner
@using BetterBudgetWeb.Shared.PreviewGoodies
@inject NavigationManager NavMan
@inject IJSRuntime jsRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<div class="flex-r-100" style="height:100%;">
    @if (!Constants.Mobile)
    {
        <div class="slide-right flex-c" style="height:100%">
            <h1 style="font-size:8em;font-family:'CBB Default';">Helping you reach your goals together</h1>
        </div>
    }
    <div class="flex-c-start slide-up" style="height:100%;padding:1em;width:@(Constants.Mobile ? "100%" : "50%")">
        <div class="flex-r">
            <img src="/images/RoundLogo.webp" alt="Logo image" style="width:50%;height:fit-content" />
        </div>
        <div class="flex-c-start" style="align-items:center">
            <span style="font-family:'CBB Default';font-size:xx-large;text-align:center">Start your commitment-free trial today</span>
            @if (Constants.Mobile)
            {
                @if (!LoadingDemo)
                {
                    <button style="background-color:transparent;padding:1em;font-family:'CBB Default';"
                            class="btn-grad"
                            @onclick=LoadDemo>
                        View Demo
                    </button>
                }
                else
                {
                    <div style="font-size:large;color:white;font-family:'CBB Default'">Loading Demo...</div>
                }
            }
            else
            {
                <button class="btn btn-primary" @onclick=@(() => NavMan.NavigateTo("sign/up")) style="width:90%;font-size:large;font-family:'CBB Default';color:black;background-color:cyan">Start 45-Day Trial</button>
            }
        </div>
    </div>
</div>
<PreviewGoodie Title="Watch your net worth grow" Desc="Embrace your money saving-habits and watch you and your partner's net worth grow together.">
    <svg width="400" height="200" aria-label="A chart." style="overflow: hidden;"><defs id="_ABSTRACT_RENDERER_ID_0"><clipPath id="_ABSTRACT_RENDERER_ID_1"><rect x="67" y="38" width="267" height="124"></rect></clipPath></defs><g><text text-anchor="start" x="67" y="22.85" font-family="Imprint MT Shadow" font-size="11" font-weight="bold" stroke="none" stroke-width="0" fill="#ffffff">Net Worth (6-Month View)</text><rect x="67" y="13.5" width="267" height="11" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect></g><g><rect x="67" y="38" width="267" height="124" stroke="none" stroke-width="0" fill-opacity="0" fill="#ffffff"></rect><g clip-path="url(https://localhost:7151/#_ABSTRACT_RENDERER_ID_1)"><g><rect x="67" y="161" width="267" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="67" y="100" width="267" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="67" y="38" width="267" height="1" stroke="none" stroke-width="0" fill="#cccccc"></rect><rect x="67" y="130" width="267" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect><rect x="67" y="69" width="267" height="1" stroke="none" stroke-width="0" fill="#ebebeb"></rect></g><g><rect x="67" y="161" width="267" height="1" stroke="none" stroke-width="0" fill="#333333"></rect></g><g><path d="M89.66666666666667,158.425L134,155.35L178.33333333333334,149.2L222.66666666666669,136.9L267,112.3L311.33333333333337,63.099999999999994" stroke="#00ff00" stroke-width="2" fill-opacity="1" fill="none"></path></g></g><g><path d="M89.66666666666667,152.425L94.8628190893733,161.425L84.47051424396004,161.425Z" stroke="#00ff00" stroke-width="1" fill="#00ff00"></path><path d="M134,149.35L139.19615242270663,158.35L128.80384757729337,158.35Z" stroke="#00ff00" stroke-width="1" fill="#00ff00"></path><path d="M178.33333333333334,143.2L183.52948575603997,152.2L173.1371809106267,152.2Z" stroke="#00ff00" stroke-width="1" fill="#00ff00"></path><path d="M222.66666666666669,130.9L227.86281908937332,139.9L217.47051424396005,139.9Z" stroke="#00ff00" stroke-width="1" fill="#00ff00"></path><path d="M267,106.3L272.19615242270663,115.3L261.80384757729337,115.3Z" stroke="#00ff00" stroke-width="1" fill="#00ff00"></path><path d="M311.33333333333337,57.099999999999994L316.52948575604,66.1L306.13718091062674,66.1Z" stroke="#00ff00" stroke-width="1" fill="#00ff00"></path></g></g><g></g></svg>
</PreviewGoodie>
<PreviewGoodie ShiftDirection="end" Invert=true Title="No need for a boring spreadsheet" Desc="Don't worry about trying to save everything in a workbook, let us do it for you! We help you track all of your transactions so you can take your mind off balancing your books.">
    <div style="padding:1em">
        <Chart DPs=DataPoints />
    </div>
</PreviewGoodie>
<PreviewGoodie Title="Save like you mean it!" Desc="With our savings goal envelopes, every dollar you make has a job. Create as many envelopes as you want and watch as everything starts to feel more attainable.">
    <div class="flex-r" style="padding:1em;flex-wrap:wrap;">
        <Envelope Name="Emergency" Scale=@Constants.TestMobile(EnvelopeSize,11) Font_Size=@Constants.TestMobile(EnvelopeFontSize,1.375)
                  Goal=5000
                  Saved=5000 FlipClick=false />
        <Envelope Name="Home" Scale=@Constants.TestMobile(EnvelopeSize,11) Font_Size=@Constants.TestMobile(EnvelopeFontSize,1.375)
                  Goal=10000
                  Saved=1560.45 FlipClick=false />
        <Envelope Name="Vacation" Scale=@Constants.TestMobile(EnvelopeSize,11) Font_Size=@Constants.TestMobile(EnvelopeFontSize,1.375)
                  Goal=2000
                  Saved=500 FlipClick=false />
        <Envelope Name="New Car" Scale=@Constants.TestMobile(EnvelopeSize,11) Font_Size=@Constants.TestMobile(EnvelopeFontSize,1.375)
                  Goal=6000
                  Saved=2350.78 FlipClick=false />
    </div>
</PreviewGoodie>

@code {
    [CascadingParameter]
    public EventCallback GrabDemo { get; set; }

    private bool LoadingDemo { get; set; }
    private List<LinePlot> Plots { get; set; }
    private List<DataPoint> DataPoints { get; set; }
    private double EnvelopeSize = 35;
    private double EnvelopeFontSize = 4.5;

    protected override Task OnInitializedAsync()
    {
        Plots = new List<LinePlot>();
        Plots.Add(new LinePlot("October", 1));
        Plots.Add(new LinePlot("October", 2));
        Plots.Add(new LinePlot("October", 4));
        Plots.Add(new LinePlot("October", 8));
        Plots.Add(new LinePlot("October", 16));
        Plots.Add(new LinePlot("October", 32));

        DataPoints = new List<DataPoint>();
        DataPoints.Add(new DataPoint { Label = "1", Value = 131.09, Negative = true });
        DataPoints.Add(new DataPoint { Label = "2", Value = 9.64, Negative = true });
        DataPoints.Add(new DataPoint { Label = "3", Value = 2614.09, Negative = true });
        DataPoints.Add(new DataPoint("4", 2700.07));
        DataPoints.Add(new DataPoint { Label = "4", Value = 7.99, Negative = true });
        DataPoints.Add(new DataPoint { Label = "6", Value = 321.68, Negative = true });
        DataPoints.Add(new DataPoint { Label = "7", Value = 21.35, Negative = true });
        return base.OnInitializedAsync();
    }

    private async void LoadDemo()
    {
        LoadingDemo = true;
        await GrabDemo.InvokeAsync();
    }
}
