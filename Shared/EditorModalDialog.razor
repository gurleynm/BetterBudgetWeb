@using BetterBudgetWeb.Data
@using BetterBudgetWeb.Repo
<style>
    option {
        color: black;
    }

    select {
        color: black;
    }

    input {
        color: black;
    }

    button {
        color: black;
    }
</style>
@if (!Mobile)
{
    <div class="modal show" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true" style="background-color:rgba(0,0,0,.8);">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width:fit-content;position: absolute;left: 50%; top: 50%;
                        transform: translate(-50%, 0%);background-image:url('https://www.publicdomainpictures.net/pictures/410000/velka/pergament-papier-hintergrund-braun.jpg');">
                <div class="modal-header">
                    <h5 class="modal-title" style="font-size:large;font-family:Papyrus;color:black;">
                        <strong>Editting Transaction</strong>
                    </h5>
                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" @onclick="@ModalCancel">
                    </button>
                </div>
                <div class="modal-body" style="width:fit-content;color:black;">
                    <EditForm Model="@Transact">
                        <table>
                            <tr>
                                <td>
                                    <label>Date</label>
                                </td>
                                <td>
                                    <label>Expense Type</label>
                                </td>
                                <td>
                                    <label>Name</label>
                                </td>
                                <td>
                                    <label>@(Constants.Person1)</label>
                                </td>
                                <td>
                                    <label>@(Constants.Person2)</label>
                                </td>
                                <td>
                                    <label>Total</label>
                                </td>
                            </tr>
                            <tr>
                                <td style="padding:1vw">
                                    <InputDate @bind-Value="Transact.DateOfTransaction" />
                                </td>
                                <td style="padding:1vw">
                                    <InputSelect id="expenses" @bind-Value="Transact.ExpenseType" style="align-self:flex-end">
                                        <option value="Static Cost">Static Cost</option>
                                        <option value="Income">Income</option>
                                        @foreach (var dci in Constants.DynamicCostItems)
                                        {
                                            <option value='@(dci.Name.Replace("*", ""))'>
                                                @(dci.Name.Replace("*", ""))
                                            </option>
                                        }
                                    </InputSelect>
                                </td>
                                <td style="padding:1vw">
                                    <InputText @bind-Value="Transact.Name" />
                                </td>
                                <td style="padding:1vw">
                                    <InputNumber @bind-Value="Transact.Person1Amount" style="width: 5vw;margin-bottom:.5vw" />
                                    <InputSelect id="expenses" @bind-Value="Transact.PaidWithPerson1" style="align-self:flex-end">
                                        <option value="@string.Empty">Payment</option>
                                        @foreach (var pay in Constants.Balances.Where(b => b.Person == Constants.Person1))
                                        {
                                            <option value="@pay.Name">@pay.Name</option>
                                        }
                                    </InputSelect>
                                </td>
                                <td style="padding:1vw">
                                    <InputNumber @bind-Value="Transact.Person2Amount" style="width: 5vw;margin-bottom:.5vw" />
                                    <InputSelect id="expenses" @bind-Value="Transact.PaidWithPerson2" style="align-self:flex-end">
                                        <option value="@string.Empty">Payment</option>
                                        @foreach (var pay in Constants.Balances.Where(b => b.Person == Constants.Person2))
                                        {
                                            <option value="@pay.Name">@pay.Name</option>
                                        }
                                    </InputSelect>
                                </td>
                                <td style="padding:1vw">
                                    <label>@Transact.TotalAmount</label>
                                </td>
                            </tr>
                        </table>
                    </EditForm>
                </div>
                <div class="modal-footer">

                    <button type="button" disabled=@Disabled class="btn btn-secondary" style="position:absolute;left:1vw;" data-dismiss="modal" @onclick="@ModalCancel">Close</button>
                    <button type="button" disabled=@Disabled class="btn btn-danger" data-dismiss="modal" @onclick="@ModalDecline">Decline</button>
                    <button type="button" disabled=@Disabled class="btn btn-success" data-dismiss="modal" @onclick="@ModalAccept">Accept</button>

                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="modal show" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true" style="background-color:rgba(0,0,0,.8);">
        <div class="modal-dialog" role="document">
            <div class="modal-content" style="width:fit-content;margin:0 auto;background-image:url('https://www.publicdomainpictures.net/pictures/410000/velka/pergament-papier-hintergrund-braun.jpg');">
                <div class="modal-header">
                    <h5 class="modal-title" style="font-size:large;font-family:Papyrus;color:black;">
                        <strong>Editting Transaction</strong>
                    </h5>
                    <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" @onclick="@ModalCancel">
                    </button>
                </div>
                <div class="modal-body" style="width:100%;color:black;">
                    <EditForm Model="@Transact">
                        <table>
                            <tr>
                                <td style="font-size:3vw;"><label style="text-decoration:underline">Parameter</label></td>
                                <td style="font-size:3vw;"><label style="text-decoration:underline">Value</label></td>
                            </tr>
                            <tr>
                                <td style="font-size:3vw">
                                    <label>Date</label>
                                </td>
                                <td style="font-size:3vw;padding:1vw">
                                    <InputDate @bind-Value="Transact.DateOfTransaction" />
                                </td>
                            </tr>
                            <tr>
                                <td style="font-size:3vw;padding:1vw">
                                    <label>Expense Type</label>
                                </td>
                                <td style="font-size:3vw;padding:1vw">
                                    <InputSelect id="expenses" @bind-Value="Transact.ExpenseType" style="align-self:flex-end">
                                        <option value="Static Cost">Static Cost</option>
                                        <option value="Income">Income</option>
                                        @foreach (var dci in Constants.DynamicCostItems)
                                        {
                                            <option value='@(dci.Name.Replace("*", ""))'>
                                                @(dci.Name.Replace("*", ""))
                                            </option>
                                        }
                                    </InputSelect>
                                </td>
                            </tr>
                            <tr>
                                <td style="font-size:3vw">
                                    <label>Name</label>
                                </td>
                                <td style="font-size:3vw;padding:1vw">
                                    <InputText @bind-Value="Transact.Name" />
                                </td>
                            </tr>
                            <tr>
                                <td style="font-size:3vw;padding:1vw;">
                                    <label>@(Constants.Person1 + " Values")</label>
                                </td>
                                <td style="font-size:3vw;padding:1vw">
                                    <InputNumber @bind-Value="Transact.Person1Amount" style="width: 15vw;margin-bottom:.5vw" />
                                    <br />
                                    <InputSelect id="expenses" @bind-Value="Transact.PaidWithPerson1" style="align-self:flex-end">
                                        <option value="@string.Empty">Payment</option>
                                        @foreach (var pay in Constants.Balances.Where(b => b.Person == Constants.Person1))
                                        {
                                            <option value="@pay.Name">@pay.Name</option>
                                        }
                                    </InputSelect>
                                </td>
                            </tr>
                            <tr>
                                <td style="font-size:3vw;padding:1vw;">
                                    <label>@(Constants.Person2 + " Values")</label>
                                </td>
                                <td style="font-size:3vw;padding:1vw">
                                    <InputNumber @bind-Value="Transact.Person2Amount" style="width: 15vw;margin-bottom:.5vw" />
                                    <br />
                                    <InputSelect id="expenses" @bind-Value="Transact.PaidWithPerson2" style="align-self:flex-end">
                                        <option value="@string.Empty">Payment</option>
                                        @foreach (var pay in Constants.Balances.Where(b => b.Person == Constants.Person2))
                                        {
                                            <option value="@pay.Name">@pay.Name</option>
                                        }
                                    </InputSelect>
                                </td>
                            </tr>
                            <tr>

                                <td style="font-size:3vw">
                                    <label>Total</label>
                                </td>
                                <td style="font-size:3vw;padding:1vw">
                                    <label>@Transact.TotalAmount</label>
                                </td>
                            </tr>
                        </table>
                    </EditForm>
                </div>
                <div class="modal-footer">
                    <button type="button" disabled=@Disabled class="btn btn-danger" style="position:absolute;left:1vw;" data-dismiss="modal" @onclick="@ModalCancel">Decline</button>
                    <button type="button" disabled=@Disabled class="btn btn-success" data-dismiss="modal" @onclick="@ModalAccept">Accept</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public Transaction Transact { get; set; }

    [Parameter]
    public bool Mobile { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private List<string> ExpenseTypes { get; set; } = new List<string>();
    private string FilterIndicatorTxt = " (ON)";

    private bool Disabled;

    protected override Task OnInitializedAsync()
    {
        ExpenseTypes.Add("Static Cost");
        ExpenseTypes.Add("Income");

        foreach (var dci in Constants.DynamicCostItems)
            ExpenseTypes.Add(dci.Name.Replace(FilterIndicatorTxt, ""));

        ExpenseTypes.Add("Other");
        return base.OnInitializedAsync();
    }

    private Task ModalCancel()
    {
        Disabled = true;
        return OnClose.InvokeAsync(false);
    }

    private async Task ModalDecline()
    {
        Disabled = true;
        await OnClose.InvokeAsync(false);
    }

    private async Task ModalAccept()
    {
        Disabled = true;
        await TransactionRepo.AddOrUpdateAsync(Transact);
        await OnClose.InvokeAsync(true);
    }
}