@using BetterBudgetWeb.Data
@using BetterBudgetWeb.Runner
@using BetterBudgetWeb.Shared.General
@using BetterBudgetWeb.Shared.PricingStuff
@inject NavigationManager NavMan
@inject IJSRuntime jsRuntime
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<GoogleAnalytic />

<div style="height:fit-content">
    @if (!Constants.Mobile)
    {
        <div id="main-bar" class="flex-r"
             style="background-color:indigo;justify-content:space-between;width:100%;position:fixed;padding:0 1em;align-items:center;z-index:1">
            <div class="flex-r" style="align-items:center;width:fit-content;justify-content:start;padding:2px 0;">
                <img src="images/RoundLogo.webp" alt="Logo image" style="width:6.5vw;height:fit-content;padding:2px 1vw;cursor:pointer" @onclick=@(() => NavMan.NavigateTo("")) />
                @if (!Constants.Mobile)
                {
                    <div class="flex-c" style="height:50%;">
                        @if (!LoadingDemo)
                        {
                            <button style="background-color:transparent;font-family:'CBB Default';"
                                    class="btn-grad"
                                    @onclick=GetDemo>
                                View Demo
                            </button>
                        }
                        else
                        {
                            <div class="slide-right" style="width:100%">
                                <div style="font-size:large;color:white;font-family:'CBB Default';padding:1em">Loading Demo...</div>
                            </div>
                        }
                    </div>
                }
            </div>

            @if (!LoadingDemo && !Constants.Mobile)
            {
                <div class="ps-3 navbar-dark flex-r">
                    <a class="navbar-brand navbtn" href="pricing" style="font-family:'CBB Default'; text-align:center;cursor:pointer">
                        <span aria-hidden="true"></span> Pricing
                    </a>
                    <a class="navbar-brand navbtn" href="FAQs" style="font-family:'CBB Default'; text-align:center;cursor:pointer">
                        <span aria-hidden="true"></span> FAQs
                    </a>
                </div>
                <div class="flex-r" style="align-items:center">
                    <a href="sign/in" style="font-family:'CBB Default';margin-right:1em;font-size:large;color:white">Log in</a>
                    <button class="btn btn-primary" @onclick=@(() => NavMan.NavigateTo("sign/up")) style="font-size:large;font-family:'CBB Default';color:black;background-color:cyan">Start 45-Day Trial</button>
                </div>
            }
        </div>
    }
    else
    {
        <LandingNavMenu />
    }
    <div class="flex-r main-bar-marg" style="height:fit-content;flex-wrap:wrap;">
        <CascadingValue Value="GrabDemo">
            @ChildContent
        </CascadingValue>
    </div>
</div>

@code {
    [Parameter]
    public RenderFragment ChildContent { get; set; }

    EventCallback GrabDemo => EventCallback.Factory.Create(this, GetDemo);

    private bool LoadingDemo { get; set; }
    ValueTask<bool> DeviceCheck { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Constants.Token = "";
        Constants.CUR_USER_NAME = "";
        Constants.TIER_LEVEL = Tier.TRIAL;
        Constants.TIER_STATUS = "active";
        Constants.catchAll = new CatchAll();
        Constants.WeIn = false;

        sessionStorage.SetItemAsync("token", "");
    }

    private async void GetDemo()
    {
        LoadingDemo = true;
        await Task.Delay(10);
        await CatchAllRunner.GrabDemo();
        Constants.WeIn = true;

        NavMan.NavigateTo("home");

        StateHasChanged();
    }
}
